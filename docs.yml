openapi: 3.0.3
info:
  title: DTAL Furniture - Backend API
  description: DTAL Furniture api documentation
  version: 1.0.0
servers:
  - url: 'https://localhost:5000/api/v1'
tags:
  - name: Authentication
    description: Access Control of website secure content
  - name: Product
    description: Product management path's
  - name: Category
    description: Category manage path's
  - name: Order
    description: Order manage path's
  - name: Review
    description: Reviews manage path's
  - name: Admin
    description: Admin manage path's
paths:
  '/auth/login':
    post:
      tags:
        - Authentication
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email/phoneNumber:
                  type: string
                password:
                  type: string
              required:
                - email/phoneNumber
                - password
      responses:
        200:
          description: Login Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    description: Success message
                    example: Successfully logged in.
                  data:
                    type: object
                    properties:
                      token:
                        type: string
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  '/auth/register':
    post:
      tags:
        - Authentication
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
                email:
                  type: string
                  format: email
                phoneNumber:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - phoneNumber
                - password
      responses:
        201:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  '/auth/create-account':
    post:
      tags:
        - Admin
      security:
        - Authorization: [ ]
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
                email:
                  type: string
                  format: email
                phoneNumber:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum:
                    - customer
                    - editor
                    - administration
                    - admin
              required:
                - name
                - email
                - phoneNumber
                - password
                - role
      responses:
        201:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  '/auth/forget-password':
    post:
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email/phoneNumber:
                  type: string
              required:
                - email/phoneNumber

      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        404:
          description: User not found
          content:
            "application/json":
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: int32
                    example: 404
                  message:
                    type: string
                    example: Issue detected
                  errorMessages:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: /api/v1/unknownRoute
                        message:
                          type: string
                          example: not found
        500:
          $ref: "#/components/responses/500"
components:
  responses:
    200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                description: Success message
                example: Successfully done this task.
    400:
      description: Bad request
      content:
        "application/json":
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int32
                example: 400
              message:
                type: string
                example: Issue detected
              errorMessages:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      example: /api/v1
                    message:
                      type: string
                      example: details of the issue
    404:
      description: Route not found
      content:
        "application/json":
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int32
                example: 404
              message:
                type: string
                example: Issue detected
              errorMessages:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      example: /api/v1/unknownRoute
                    message:
                      type: string
                      example: not found
    500:
      description: Server error
      content:
        "application/json":
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int32
                example: 500
              message:
                type: string
                example: Something went wrong
              errorMessages:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      example: ""
                    message:
                      type: string
                      example: ""
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        category:
          type: string
        price:
          type: string
        discount:
          type: object
          properties:
            type:
              type: string
              enum:
                - percentage
                - fixed
            value:
              type: integer
              format: init32
        description:
          type: string
        images:
          type: array
          items:
            type: string
        thumbnail:
          type: string
        stock:
          type: integer
          format: init32
          default: 0
        isVariableProduct:
          type: boolean
          default: false
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Reviews'
        attributes: &common_attribute
          type: object
          properties:
            list:
              type: array
              items:
                type: string
            values:
              type: array
              items:
                type: string
        variations:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              price:
                type: integer
                format: init32
              discount:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - percentage
                      - fixed
                  value:
                    type: integer
                    format: init32

              stock:
                type: integer
                format: init32

              attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
        tags:
          type: array
          items:
            type: string
    Single_Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        price:
          type: integer
          format: init32
        discount:
          type: object
          properties:
            type:
              type: string
              enum:
                - percentage
                - fixed
            value:
              type: integer
              format: init32
        images:
          type: array
          items:
            type: string
        thumbnail:
          type: string
        stock:
          type: integer
          format: init32
          default: 0
        isVariableProduct:
          type: boolean
          default: false
        description:
          type: string
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Reviews'
        attributes:
          type: object
          properties:
            list:
              type: array
              items:
                type: string
            value:
              type: array
              items:
                type: string
        tags:
          type: array
          items:
            type: string
    Variable_Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        category:
          type: string
        price:
          type: string
          example: 10 BDT - 15 BDT
        images:
          type: array
          items:
            type: string
        thumbnail:
          type: string
        isVariableProduct:
          type: boolean
          default: true
        attributes:
          type: object
          properties:
            list:
              type: array
              items:
                type: string
            value:
              type: array
              items:
                type: string
        variations:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              image:
                type: string
              price:
                type: integer
              stock:
                type: integer
              attribute:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    label:
                      type: string
                    value:
                      type: string
        tags:
          type: array
          items:
            type: string
    Category:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: string
        icon:
          type: string
        parent:
          type: string
          example: 5f7a2db4a5e093001f076f5c
          default: null
        status:
          type: string
          enum:
            - active
            - inactive
          default: active
        tags:
          type: array
          items:
            type: string
    Reviews:
      type: object
      properties:
        _id:
          type: string
        orderId:
          type: string
        uid:
          type: string
        ratting:
          type: integer
          format: init32
          maximum: 5
          default: 5
        comments:
          type: string
          default: ''
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
